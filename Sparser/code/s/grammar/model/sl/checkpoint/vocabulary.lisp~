;;; -*- Mode:LISP; Syntax:Common-Lisp; Package:(SPARSER COMMON-LISP) -*-
;;; Copyright (c) 2009 BBNT Solutions LLC. All Rights Reserved
;;; $Id:$

;;;    File: "vocabulary"
;;;  Module: "grammar/model/sl/checkpoint/
;;; version: April 2009

;; Initiated 4/8/09

(in-package :sparser)

;;-- simple things

(np-head "car")
(np-head "trunk")

;;-- simple actions

(svo '("get" :past-tense "got"))

(svo '("go" :past-tense "went"))

;;(sv-spatial-prep-marked-o "get")  ;; "out of" "into" "over" ...
; That is a way to do it that works nicely, but it hides the information
; that we want in very inconvenient places. It uses the category
; SPATIAL-ORIENTATION to label every preposition we might conceivably
; want to use, which is a big part of the hiding since you'd have to
; dig out the identity of the preposition in order to reconstruct
; the proposition.

(sv-prep-marked-o "get" "out of") 
; Being debugged. Changed the brackets on preposition to be specific
; to that type. Worked out how to get a polyword ("out of") and other
; prepositions converted to mix-in categories in order to specialize
; the verb and capture just what we want. Still (4/27) working on 

(svo "open")


;;--- debugging bits (usually goes in workspace)
#|
 (e :from 0 :to 6)  (display-chart :style :all-edges)
 (exploded-tree-family-named 'transitive/specializing-pp)

 (trace-edges)
 (display-chart-brackets)
|#

